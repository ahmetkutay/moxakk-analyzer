# Application configuration
spring.application.name=analyzer
server.port=8081

# Supabase configuration
supabase.url=${SUPABASE_URL}
supabase.key=${SUPABASE_ANON_KEY}
supabase.secret=${SUPABASE_SERVICE_ROLE_KEY:your-supabase-service-role-key}

# Database configuration (PostgreSQL via Supabase)
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT configuration
jwt.secret=${JWT_SECRET:your-jwt-secret-key-should-be-at-least-32-characters-long}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Thymeleaf configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Logging configuration
logging.level.com.moxakk.analyzer=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.org.springframework.security=DEBUG

# CSRF protection
spring.security.csrf.enabled=true

# Enable database initialization during startup
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

# AI API keys
google.api.key=${GOOGLE_API_KEY:your-google-api-key}
openai.api.key=${OPENAI_API_KEY:your-openai-api-key}
cohere.api.key=${COHERE_API_KEY:your-cohere-api-key}
anthropic.api.key=${ANTHROPIC_API_KEY:your-anthropic-api-key}
mistral.api.key=${MISTRAL_API_KEY:your-mistral-api-key}

# OpenWeather API key
openweather.api.key=${OPENWEATHER_API_KEY:your-openweather-api-key}